/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        overwrite: true, 
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            overwrite: true,
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CAT_FASTQ {
        publishDir = [
            enabled: false
        ]
    }

    withName: GTF_GENE_FILTER {
        publishDir = [
            overwrite: true,
            path: { "${params.outdir}/gtf_filter" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: false
        ]
    }

    withName: CELLBENDER_REMOVE_BACKGROUND {

        publishDir = [
                overwrite: true,
                path: { "${params.outdir}/cellbender/${meta.id}/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]

    }

    withName: CONVERT_H5 {

        publishDir = [
                overwrite: true,
                path: { "${params.outdir}/cellbender/${meta.id}/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]

    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            overwrite: true,
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}


if(params.aligner == "cellranger") {
    process {
        withName: CELLRANGER_MKGTF {
            publishDir = [
                overwrite: true,
                path: "${params.outdir}/${params.aligner}/mkgtf",
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
            ext.args = "--attribute=gene_biotype:protein_coding --attribute=gene_biotype:lncRNA --attribute=gene_biotype:pseudogene"
        }
        withName: CELLRANGER_MKREF {
            publishDir = [
                overwrite: true,
                path: "${params.outdir}/${params.aligner}/mkref",
                mode: params.publish_dir_mode,
                enabled: params.save_reference
            ]
        }
        withName: CELLRANGER_COUNT {
            publishDir = [
                overwrite: true,
                path: "${params.outdir}/${params.aligner}/count",
                mode: params.publish_dir_mode
            ]
            ext.args = "--include-introns=${params.include_introns} --no-bam --nosecondary"
        }
    }
} else if (params.aligner == "cellranger_arc") { // need to update with current cellranger-arc and macs2 parameters. currently cellranger-arc is copied from cellranger above
    process {
        withName: CELLRANGER_ARC_MKGTF {
            publishDir = [
               path: "${params.outdir}/${params.aligner}/mkgtf",
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
            ext.args = {"--attribute=gene_biotype:protein_coding --attribute=gene_biotype:lncRNA --attribute=gene_biotype:pseudogene"}
        }
        withName: CELLRANGER_ARC_MKREF {
            publishDir = [
                path: "${params.outdir}/${params.aligner}/mkref",
                mode: params.publish_dir_mode,
                enabled: params.save_reference
            ]
        }
        withName: CELLRANGER_ARC_COUNT {
            publishDir = [
                path: "${params.outdir}/${params.aligner}/count",
                mode: params.publish_dir_mode
            ]
        }

        withName: MACS2_CALLPEAK {
            publishDir = [
                path: { "${params.outdir}/macs2/${meta.id}/" },
                mode: params.publish_dir_mode
            ]
          ext.args = "--nomodel" // need to make availible to the user
        }
  }
 }